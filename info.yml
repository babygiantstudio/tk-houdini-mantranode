# Copyright (c) 2013 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.
# ----------------------------------------------------
#
# Metadata defining the behaviour and requirements for this app

# expected fields in the configuration file for this app
configuration:

    # tank write nodes paths
    mantra_nodes:
        type: list
        description: "A list of dictionaries in which you define the Shotgun Write nodes that
                     are supported in this configuration. Each dictionary entry needs to have
                     the following keys: 'name' - a descriptive name for this node. 'file_type' -
                     the file type to use for the renders (exr, cin, dpx etc). This will be
                     passed to the Nuke write node when rendering. 'settings' - configuration
                     settings for the given file type, as a dictionary. This too will be
                     passed to the write node when rendering. Next, you need two entries
                     named 'render_template' and 'publish_template'
                     - these control the locations where data is written to at various stages
                     of the workflow. These templates need to include the 'version' field
                     and can optionally include the fields 'name', 'width', 'height'
                     (which reflect the image resolution of the render) and 'output' (which
                     differenciates different write nodes). If you are doing stereo
                     rendering and want to use Nuke's %V flag, include an 'eye' field.
                     This will be replaced by %V in the paths when the Shotgun Write node
                     computes them.  Finally, you need the templates 'proxy_render_template'
                     and 'proxy_publish_template' these have the same requirements as the regular
                     render and pubish templates but are used when rendering in proxy mode.  If
                     these are missing (set to null) then the regular templates will be used
                     instead."
        allows_empty: True
        values:
            type: dict
            items:
                name:
                    type: str
                    description: "The name of the configuration profile. Will be
                                  shown in configuration menu inside Houdini."
                default_node_name:
                    type: str
                    description: "A default name for the node when it is created in Houdini.
                                  Allowed characters: letters, numbers, periods, dashes, or underscores."
                    default_value: sgtk_mantra
                settings:
                    type: dict
                    description: "Specify any parameter setting for this node."
                template_render:
                    type: template
                    fields: context, version, SEQ, [channel], [output], [name], [width], [height], [eye], [YYYY], [MM], [DD], *
                    description: "Main output."
                template_ifd:
                    type: template
                    fields: context, version, SEQ, [channel], [output], [name], [width], [height], [eye], [TankType], *
                    description: "IFDs."
                template_dcm:
                    type: template
                    fields: context, version, SEQ, [channel], [output], [name], [width], [height], [eye], *
                    description: "Deep Camera Map output."
                template_extra_plane:
                    type: template
                    fields: context, version, SEQ, [channel], [output], [name], [width], [height], [eye], [TankType], *
                    description: "Extra Image Plane Output."
                tile_color:
                    type: list
                    values:
                        type: float
                    description: "Specify a list of 3 values in the range 0.0-1.0 that represent the RGB values to be
                                  set for the node background/tile_color in the node graph when this profile is used.
                                  Specify an empty list to use the default colour."
                    allows_empty: True
                    default_value: []

# the Shotgun fields that this app needs in order to operate correctly
requires_shotgun_fields:

# More verbose description of this item
display_name: "Mantra Render Output Node"
description: "Support for the Toolkit Mantra render output node in Houdini."

# Required minimum versions for this item to run
requires_shotgun_version:
requires_core_version: "v0.12.5"
requires_engine_version: "v0.2.0"

# the engines that this app can operate in:
supported_engines: [tk-houdini]

# the frameworks required to run this app
frameworks:
